{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClienteService {\n  constructor(http) {\n    this.http = http;\n    this.urlListarCLientes = 'http://localhost:8080/api/clientes';\n  }\n  getClientes() {\n    //return of(CLIENTES);\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.get(this.urlListarCLientes, {\n      headers: headers\n    });\n  }\n}\nClienteService.ɵfac = function ClienteService_Factory(t) {\n  return new (t || ClienteService)(i0.ɵɵinject(i1.HttpClient));\n};\nClienteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ClienteService,\n  factory: ClienteService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAK9D,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAFhB,sBAAiB,GAAU,oCAAoC;EAEhC;EAEvCC,WAAW;IACT;IACA,IAAIC,OAAO,GAAG,IAAIL,WAAW,CAAC;MAAC,cAAc,EAAE;IAAkB,CAAC,CAAC;IACnE,OAAO,IAAI,CAACG,IAAI,CAACG,GAAG,CAAY,IAAI,CAACC,iBAAiB,EAAE;MAACF,OAAO,EAAEA;IAAO,CAAC,CAAC;EAC7E;;AAVWJ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAO,SAAdP,cAAc;EAAAQ,YAFb;AAAM","names":["HttpHeaders","ClienteService","constructor","http","getClientes","headers","get","urlListarCLientes","factory","providedIn"],"sourceRoot":"","sources":["/home/w/spring/angular/clientes-app/src/app/clientes/cliente.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cliente } from './cliente';\nimport { CLIENTES } from './clientes.json';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n\n  private urlListarCLientes:string = 'http://localhost:8080/api/clientes';\n\n  constructor(private http:HttpClient) { }\n\n  getClientes() : Observable<Cliente[]> {\n    //return of(CLIENTES);\n    let headers = new HttpHeaders({'Content-Type': 'application/json'});\n    return this.http.get<Cliente[]>(this.urlListarCLientes, {headers: headers});\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}